{
  "endpoints": [
    <% @items.sort_by { |s| s.name.to_s }.each_with_index do |resource, i| %>
      {
        "name": <%= resource.tag(:topic).text.to_json %>,
        "methods": [
          <% meths = run_verifier(resource.meths(:inherited => false, :included => false)) %>
          <% meths.each_with_index do |method, i| %>
            <% method.tags(:url).each_with_index do |url_tag, i| %>
              {
                "MethodName": <%= method.name.to_json %>,
                "Synopsis": <%= method.docstring.to_s.gsub("\n","").to_json %>,
                "HTTPMethod": "<%= url_tag.text[/(?<=\[)\w+(?=\])/] %>",
                "URI": <%= url_tag.text.split(" ").last.to_json %>,
                "RequiresOAuth": "Y",
                "parameters": [
                  <% method.tags(:argument).each_with_index do |tag, i| %>
                    {
                      "Name": <%= tag.name.to_json %>,
                      "Required": "<%= tag.text.to_s[/\(REQ\)/] ? "Y" : "N"%>",
                      "Default": "<%= (default_val = tag.text.to_s.match(/\(\s?Default:\s?([^\)]*)\)/)) ? default_val[1].gsub(/('|")/,'') : '' %>",
                      "Type": <%= tag.types.first.to_json %>,
                      "EnumeratedList": <%= ((default_val = tag.text.to_s.match(/\(\s?Values:\s?([^\)]*)\)/)) ? eval("[#{default_val[1]}]") : '').to_json %>,
                      "Description": <%= tag.text.to_s.gsub(/(\(REQ\)|\(\s?Values:\s?[^\)]*\))/,"").gsub("\n","").to_json %>
                    }<%= "," if i < (method.tags(:argument).length - 1) %>
                  <% end %>
                ]
              }<%= "," if i < (method.tags(:url).length - 1) %>
            <% end %><%= "," if i < (meths.length - 1) %>
          <% end %>
        ]
      }<%= "," if i < (@items.length - 1) %>
    <% end %>
  ]
}
